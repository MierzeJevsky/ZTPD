
CREATE TABLE CYTATY AS SELECT * FROM ZSBD_TOOLS.CYTATY;

SELECT * FROM CYTATY;

SELECT AUTOR, TEKST
FROM CYTATY
WHERE UPPER(TEKST) LIKE '%PESYMISTA%'
AND UPPER(TEKST) LIKE '%OPTYMISTA%';


CREATE INDEX CYTATY_TEKST_IDX
ON CYTATY(TEKST)
INDEXTYPE IS CTXSYS.CONTEXT;


SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'PESYMISTA AND OPTYMISTA', 1) > 0;


SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'PESYMISTA ~ OPTYMISTA', 1) > 0;


SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'NEAR((PESYMISTA, OPTYMISTA), 3)') > 0;


SELECT
    AUTOR,
    TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'NEAR((PESYMISTA, OPTYMISTA), 10)') > 0;


SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, '¿yci%', 1) > 0;


SELECT AUTOR, TEKST, SCORE(1) AS DOPASOWANIE
FROM CYTATY
WHERE CONTAINS(TEKST, '¿yci%', 1) > 0;


SELECT AUTOR, TEKST, SCORE(1) AS DOPASOWANIE
FROM CYTATY
WHERE CONTAINS(TEKST, '¿yci%', 1) > 0
AND ROWNUM <= 1
ORDER BY 3 DESC;


SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'FUZZY(problem,,,N)', 1) > 0;


INSERT INTO CYTATY VALUES(
    1000,
    'Bertrand Russell',
    'To smutne, ¿e g³upcy s¹ tacy pewni siebie, a ludzie rozs¹dni tacy pe³ni w¹tpliwoœci.'
);
COMMIT;


SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'g³upcy', 1) > 0;


SELECT TOKEN_TEXT
FROM DR$CYTATY_TEKST_IDX$I;

SELECT TOKEN_TEXT
FROM DR$CYTATY_TEKST_IDX$I
WHERE TOKEN_TEXT = 'g³upcy';


DROP INDEX CYTATY_TEKST_IDX;

CREATE INDEX CYTATY_TEKST_IDX
ON CYTATY(TEKST)
INDEXTYPE IS CTXSYS.CONTEXT;


SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'g³upcy', 1) > 0;


DROP INDEX CYTATY_TEKST_IDX;

DROP TABLE CYTATY;


/****** Zaawansowane indeksowanie i wyszukiwanie *****/

CREATE TABLE QUOTES AS SELECT * FROM ZSBD_TOOLS.QUOTES;

SELECT * FROM QUOTES;


CREATE INDEX QUOTES_TEXT_IDX
ON QUOTES(TEXT)
INDEXTYPE IS CTXSYS.CONTEXT;


SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'work', 1) > 0;

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, '$work', 1) > 0;

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'working’', 1) > 0;

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, '$working’', 1) > 0;


SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'it', 1) > 0;


SELECT * FROM CTX_STOPLISTS;


SELECT * FROM CTX_STOPWORDS;


DROP INDEX QUOTES_TEXT_IDX;

CREATE INDEX QUOTES_TEXT_IDX
ON QUOTES(TEXT)
INDEXTYPE IS CTXSYS.CONTEXT
PARAMETERS ('stoplist CTXSYS.EMPTY_STOPLIST');


SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'it', 1) > 0;


SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'fool AND humans', 1) > 0;


SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'fool AND computer', 1) > 0;


SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, '(fool AND humans) WITHIN SENTENCE', 1) > 0;


DROP INDEX QUOTES_TEXT_IDX;


BEGIN
    ctx_ddl.create_section_group('nullgroup', 'NULL_SECTION_GROUP');
    ctx_ddl.add_special_section('nullgroup',  'SENTENCE');
    ctx_ddl.add_special_section('nullgroup',  'PARAGRAPH');
END;



CREATE INDEX QUOTES_TEXT_IDX
ON QUOTES(TEXT)
INDEXTYPE IS CTXSYS.CONTEXT
PARAMETERS ('stoplist CTXSYS.EMPTY_STOPLIST section group nullgroup');


SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, '(fool AND humans) WITHIN SENTENCE', 1) > 0;

SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, '(fool AND computer) WITHIN SENTENCE', 1) > 0;


SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'humans', 1) > 0;


DROP INDEX QUOTES_TEXT_IDX;

BEGIN
    ctx_ddl.create_preference('lex_z_m','BASIC_LEXER');
    ctx_ddl.set_attribute('lex_z_m', 'printjoins', '-');
    ctx_ddl.set_attribute('lex_z_m', 'index_text', 'YES');
END;


CREATE INDEX QUOTES_TEXT_IDX
ON QUOTES(TEXT)
INDEXTYPE IS CTXSYS.CONTEXT
PARAMETERS ('
    stoplist CTXSYS.EMPTY_STOPLIST
    section group nullgroup
    LEXER lex_z_m');


SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'humans', 1) > 0;


SELECT AUTHOR, TEXT
FROM QUOTES
WHERE CONTAINS(TEXT, 'non\-humans', 1) > 0;


DROP TABLE QUOTES;

BEGIN
    ctx_ddl.drop_preference('lex_z_m');
END;

